# 🦊 Nox - GitHub Pages Deployment Workflow

name: Deploy Nox Landing Page to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths: ["docs/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🦊 Checkout Nox Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v4

      - name: 🏗️ Build Landing Page
        run: |
          echo "🦊 Building Nox landing page..."
          # Copy docs folder to _site for GitHub Pages
          mkdir -p _site
          cp -r docs/* _site/

          # Ensure proper file permissions and structure
          find _site -name "*.html" -exec chmod 644 {} \;
          find _site -name "*.css" -exec chmod 644 {} \;
          find _site -name "*.js" -exec chmod 644 {} \;

          # Add build timestamp
          echo "<!-- Built on $(date) -->" >> _site/index.html

          # List files for debugging
          echo "📁 Files in _site:"
          ls -la _site/

          echo "✅ Nox landing page built successfully!"

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🎉 Deployment Success
        run: |
          echo "🦊 Nox landing page deployed successfully!"
          echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"
          echo "✨ Your AI coding fox is now live!"
