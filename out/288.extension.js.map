{"version":3,"file":"288.extension.js","mappings":"qFACA,IAAIA,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOP,OAAOQ,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DJ,OAAOc,eAAeZ,EAAGG,EAAIE,EAChC,EAAI,SAAUL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGW,EAAsBhB,MAAQA,KAAKgB,qBAAwBf,OAAOC,OAAS,SAAUC,EAAGc,GACxFhB,OAAOc,eAAeZ,EAAG,UAAW,CAAEU,YAAY,EAAMK,MAAOD,GAClE,EAAI,SAASd,EAAGc,GACbd,EAAW,QAAIc,CACnB,GACIE,EAAgBnB,MAAQA,KAAKmB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIV,WAAY,OAAOU,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIf,KAAKe,EAAe,YAANf,GAAmBJ,OAAOqB,UAAUC,eAAeC,KAAKJ,EAAKf,IAAIN,EAAgBsB,EAAQD,EAAKf,GAEtI,OADAW,EAAmBK,EAAQD,GACpBC,CACX,EACApB,OAAOc,eAAeU,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQC,IAAMD,EAAQE,KAAOF,EAAQG,cAAW,EAChD,MAAMC,EAAOV,EAAa,EAAQ,QAC5BW,EAAQX,EAAa,EAAQ,QACnCY,eAAeH,EAASI,GACpB,IAAIC,EAAS,EACb,MAAMC,EAAS,GACf,UAAW,MAAMC,KAASH,EACtBC,GAAUE,EAAMF,OAChBC,EAAOE,KAAKD,GAEhB,OAAOE,OAAOC,OAAOJ,EAAQD,EACjC,CACAR,EAAQG,SAAWA,EAcnBH,EAAQE,KAZRI,eAAoBC,GAChB,MACMO,SADYX,EAASI,IACXQ,SAAS,QACzB,IACI,OAAOC,KAAKC,MAAMH,EACtB,CACA,MAAOI,GACH,MAAMC,EAAMD,EAEZ,MADAC,EAAIC,SAAW,YAAYN,KACrBK,CACV,CACJ,EAcAnB,EAAQC,IAZR,SAAaoB,EAAKC,EAAO,CAAC,GACtB,MACMrB,IADsB,iBAARoB,EAAmBA,EAAMA,EAAIE,MAC/BC,WAAW,UAAYnB,EAAQD,GAAMqB,QAAQJ,EAAKC,GAC9DI,EAAU,IAAIC,QAAQ,CAACC,EAASC,KAClC5B,EACK6B,KAAK,WAAYF,GACjBE,KAAK,QAASD,GACdE,QAGT,OADA9B,EAAI+B,KAAON,EAAQM,KAAKC,KAAKP,GACtBzB,CACX,C,wBC9DA,IAAI3B,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOP,OAAOQ,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DJ,OAAOc,eAAeZ,EAAGG,EAAIE,EAChC,EAAI,SAAUL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGW,EAAsBhB,MAAQA,KAAKgB,qBAAwBf,OAAOC,OAAS,SAAUC,EAAGc,GACxFhB,OAAOc,eAAeZ,EAAG,UAAW,CAAEU,YAAY,EAAMK,MAAOD,GAClE,EAAI,SAASd,EAAGc,GACbd,EAAW,QAAIc,CACnB,GACIE,EAAgBnB,MAAQA,KAAKmB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIV,WAAY,OAAOU,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIf,KAAKe,EAAe,YAANf,GAAmBJ,OAAOqB,UAAUC,eAAeC,KAAKJ,EAAKf,IAAIN,EAAgBsB,EAAQD,EAAKf,GAEtI,OADAW,EAAmBK,EAAQD,GACpBC,CACX,EACIsC,EAAgB3D,MAAQA,KAAK2D,cAAiB,SAASvD,EAAGqB,GAC1D,IAAK,IAAImC,KAAKxD,EAAa,YAANwD,GAAoB3D,OAAOqB,UAAUC,eAAeC,KAAKC,EAASmC,IAAI7D,EAAgB0B,EAASrB,EAAGwD,EAC3H,EACA3D,OAAOc,eAAeU,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQoC,WAAQ,EAChB,MAAMC,EAAM3C,EAAa,EAAQ,QAC3BU,EAAOV,EAAa,EAAQ,QAC5B4C,EAAU,EAAQ,OACxBJ,EAAa,EAAQ,OAAclC,GACnC,MAAMuC,EAAWC,OAAO,0BACxB,MAAMJ,UAAchC,EAAKgC,MACrB,WAAAK,CAAYnB,GACRoB,MAAMpB,GACN/C,KAAKgE,GAAY,CAAC,CACtB,CAIA,gBAAAI,CAAiBC,GACb,GAAIA,EAAS,CAIT,GAAsC,kBAA3BA,EAAQC,eACf,OAAOD,EAAQC,eAKnB,GAAgC,iBAArBD,EAAQE,SACf,MAA4B,WAArBF,EAAQE,QAEvB,CAIA,MAAM,MAAEC,GAAU,IAAIC,MACtB,MAAqB,iBAAVD,GAEJA,EACFE,MAAM,MACNC,KAAMC,IAAmC,IAA7BA,EAAEC,QAAQ,gBACO,IAA9BD,EAAEC,QAAQ,eAClB,CAOA,gBAAAC,CAAiBC,GAIb,GAAI/E,KAAKgF,aAAeC,KAAYjF,KAAKkF,kBAAoBD,IACzD,OAAO,KAKNjF,KAAKmF,QAAQJ,KAEd/E,KAAKmF,QAAQJ,GAAQ,IAEzB,MAAMK,EAAa,IAAItB,EAAIuB,OAAO,CAAE1E,UAAU,IAI9C,OAHAX,KAAKmF,QAAQJ,GAAM3C,KAAKgD,GAExBpF,KAAKsF,mBACEF,CACX,CACA,gBAAAG,CAAiBR,EAAMS,GACnB,IAAKxF,KAAKmF,QAAQJ,IAAoB,OAAXS,EACvB,OAEJ,MAAML,EAAUnF,KAAKmF,QAAQJ,GACvBU,EAAQN,EAAQN,QAAQW,IACf,IAAXC,IACAN,EAAQO,OAAOD,EAAO,GAEtBzF,KAAKsF,mBACkB,IAAnBH,EAAQlD,eAEDjC,KAAKmF,QAAQJ,GAGhC,CAGA,OAAAY,CAAQtB,GAEJ,OADuBrE,KAAKoE,iBAAiBC,GAGlCN,EAAQF,MAAMvC,UAAUqE,QAAQnE,KAAKxB,KAAMqE,GAG/CF,MAAMwB,QAAQtB,EACzB,CACA,YAAAuB,CAAalE,EAAK2C,EAASwB,GACvB,MAAMC,EAAc,IACbzB,EACHC,eAAgBtE,KAAKoE,iBAAiBC,IAEpCU,EAAO/E,KAAK2F,QAAQG,GACpBV,EAAapF,KAAK8E,iBAAiBC,GACzC3B,QAAQC,UACHI,KAAK,IAAMzD,KAAK+F,QAAQrE,EAAKoE,IAC7BrC,KAAM+B,IAEP,GADAxF,KAAKuF,iBAAiBR,EAAMK,GACxBI,aAAkB3D,EAAKgC,MACvB,IAEI,OAAO2B,EAAOQ,WAAWtE,EAAKoE,EAClC,CACA,MAAOlD,GACH,OAAOiD,EAAGjD,EACd,CAEJ5C,KAAKgE,GAAUiC,cAAgBT,EAE/BrB,MAAMyB,aAAalE,EAAK2C,EAASwB,IACjCjD,IACA5C,KAAKuF,iBAAiBR,EAAMK,GAC5BS,EAAGjD,IAEX,CACA,gBAAAsD,GACI,MAAMV,EAASxF,KAAKgE,GAAUiC,cAE9B,GADAjG,KAAKgE,GAAUiC,mBAAgB1F,GAC1BiF,EACD,MAAM,IAAIf,MAAM,sDAEpB,OAAOe,CACX,CACA,eAAIW,GACA,OAAQnG,KAAKgE,GAAUmC,cACA,WAAlBnG,KAAKuE,SAAwB,IAAM,GAC5C,CACA,eAAI4B,CAAYlF,GACRjB,KAAKgE,KACLhE,KAAKgE,GAAUmC,YAAclF,EAErC,CACA,YAAIsD,GACA,OAAQvE,KAAKgE,GAAUO,WAClBvE,KAAKoE,mBAAqB,SAAW,QAC9C,CACA,YAAIG,CAAStD,GACLjB,KAAKgE,KACLhE,KAAKgE,GAAUO,SAAWtD,EAElC,EAEJQ,EAAQoC,MAAQA,C,wBC/KhB,IAAI9D,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOP,OAAOQ,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DJ,OAAOc,eAAeZ,EAAGG,EAAIE,EAChC,EAAI,SAAUL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGW,EAAsBhB,MAAQA,KAAKgB,qBAAwBf,OAAOC,OAAS,SAAUC,EAAGc,GACxFhB,OAAOc,eAAeZ,EAAG,UAAW,CAAEU,YAAY,EAAMK,MAAOD,GAClE,EAAI,SAASd,EAAGc,GACbd,EAAW,QAAIc,CACnB,GACIE,EAAgBnB,MAAQA,KAAKmB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIV,WAAY,OAAOU,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIf,KAAKe,EAAe,YAANf,GAAmBJ,OAAOqB,UAAUC,eAAeC,KAAKJ,EAAKf,IAAIN,EAAgBsB,EAAQD,EAAKf,GAEtI,OADAW,EAAmBK,EAAQD,GACpBC,CACX,EACI+E,EAAmBpG,MAAQA,KAAKoG,iBAAoB,SAAUhF,GAC9D,OAAQA,GAAOA,EAAIV,WAAcU,EAAM,CAAE,QAAWA,EACxD,EACAnB,OAAOc,eAAeU,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ4E,qBAAkB,EAC1B,MAAMvC,EAAM3C,EAAa,EAAQ,QAC3BmF,EAAMnF,EAAa,EAAQ,QAC3BoF,EAAWH,EAAgB,EAAQ,QACnCI,EAAUJ,EAAgB,EAAQ,QAClCK,EAAe,EAAQ,OACvBC,EAAQ,EAAQ,OAChBC,EAAyB,EAAQ,OACjCC,GAAQ,EAAIJ,EAAQK,SAAS,qBAC7BC,EAA8BzC,QACL9D,IAAvB8D,EAAQ0C,YACR1C,EAAQ2C,OACPlD,EAAImD,KAAK5C,EAAQ2C,MACX,IACA3C,EACH0C,WAAY1C,EAAQ2C,MAGrB3C,EAcX,MAAMgC,UAAwBI,EAAa5C,MACvC,WAAAK,CAAYgD,EAAOnE,GACfoB,MAAMpB,GACN/C,KAAKqE,QAAU,CAAE8C,UAAM5G,GACvBP,KAAKkH,MAAyB,iBAAVA,EAAqB,IAAIR,EAAMU,IAAIF,GAASA,EAChElH,KAAKqH,aAAetE,GAAMuE,SAAW,CAAC,EACtCV,EAAM,4CAA6C5G,KAAKkH,MAAMlE,MAE9D,MAAMgE,GAAQhH,KAAKkH,MAAMK,UAAYvH,KAAKkH,MAAMF,MAAMQ,QAAQ,WAAY,IACpEC,EAAOzH,KAAKkH,MAAMO,KAClBC,SAAS1H,KAAKkH,MAAMO,KAAM,IACF,WAAxBzH,KAAKkH,MAAM3C,SACP,IACA,GACVvE,KAAK8F,YAAc,CAEf6B,cAAe,CAAC,eACZ5E,EAAO6E,EAAK7E,EAAM,WAAa,KACnCiE,OACAS,OAER,CAKA,aAAM1B,CAAQrE,EAAKqB,GACf,MAAM,MAAEmE,GAAUlH,KAClB,IAAK+C,EAAKiE,KACN,MAAM,IAAIa,UAAU,sBAGxB,IAAIrC,EACmB,WAAnB0B,EAAM3C,UACNqC,EAAM,4BAA6B5G,KAAK8F,aACxCN,EAASc,EAAIP,QAAQe,EAA2B9G,KAAK8F,gBAGrDc,EAAM,4BAA6B5G,KAAK8F,aACxCN,EAAS1B,EAAIiC,QAAQ/F,KAAK8F,cAE9B,MAAMwB,EAAuC,mBAAtBtH,KAAKqH,aACtBrH,KAAKqH,eACL,IAAKrH,KAAKqH,cACVL,EAAOlD,EAAIgE,OAAO/E,EAAKiE,MAAQ,IAAIjE,EAAKiE,QAAUjE,EAAKiE,KAC7D,IAAIe,EAAU,WAAWf,KAAQjE,EAAK0E,oBAEtC,GAAIP,EAAMc,UAAYd,EAAMe,SAAU,CAClC,MAAMC,EAAO,GAAGC,mBAAmBjB,EAAMc,aAAaG,mBAAmBjB,EAAMe,YAC/EX,EAAQ,uBAAyB,SAASjF,OAAO+F,KAAKF,GAAM1F,SAAS,WACzE,CACA8E,EAAQe,KAAO,GAAGrB,KAAQjE,EAAK0E,OAC1BH,EAAQ,sBACTA,EAAQ,oBAAsBtH,KAAKsI,UAC7B,aACA,SAEV,IAAK,MAAMvD,KAAQ9E,OAAOsI,KAAKjB,GAC3BS,GAAW,GAAGhD,MAASuC,EAAQvC,SAEnC,MAAMyD,GAAuB,EAAI7B,EAAuB8B,oBAAoBjD,GAC5EA,EAAOkD,MAAM,GAAGX,SAChB,MAAM,QAAEhC,EAAO,SAAE4C,SAAmBH,EAGpC,GAFA9G,EAAIkH,KAAK,eAAgB7C,GACzB/F,KAAK4I,KAAK,eAAgB7C,EAASrE,GACR,MAAvBqE,EAAQ8C,WAER,OADAnH,EAAI6B,KAAK,SAAUuF,GACf/F,EAAKuB,gBAGLsC,EAAM,sCACCN,EAAIP,QAAQ,IACZ6B,EAAKd,EAA2B/D,GAAO,OAAQ,OAAQ,QAC1DyC,YAGDA,EAYXA,EAAOuD,UACP,MAAM3D,EAAa,IAAItB,EAAIuB,OAAO,CAAE1E,UAAU,IAY9C,OAXAyE,EAAW4D,UAAW,EAEtBtH,EAAI6B,KAAK,SAAW0F,IAChBrC,EAAM,8CACN,EAAIL,EAASM,SAASoC,EAAEC,cAAc,QAAU,GAIhDD,EAAE7G,KAAKuG,GACPM,EAAE7G,KAAK,QAEJgD,CACX,EAIJ,SAAS0D,EAAOtD,GACZA,EAAOsD,QACX,CACA,SAASlB,EAAKuB,KAAQZ,GAClB,MAAMa,EAAM,CAAC,EACb,IAAIC,EACJ,IAAKA,KAAOF,EACHZ,EAAKe,SAASD,KACfD,EAAIC,GAAOF,EAAIE,IAGvB,OAAOD,CACX,CAdA/C,EAAgBkD,UAAY,CAAC,OAAQ,SACrC9H,EAAQ4E,gBAAkBA,C,wBCpK1B,IAAID,EAAmBpG,MAAQA,KAAKoG,iBAAoB,SAAUhF,GAC9D,OAAQA,GAAOA,EAAIV,WAAcU,EAAM,CAAE,QAAWA,EACxD,EACAnB,OAAOc,eAAeU,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQgH,wBAAqB,EAC7B,MACM7B,GAAQ,EADER,EAAgB,EAAQ,QACdS,SAAS,0CA4FnCpF,EAAQgH,mBA3FR,SAA4BjD,GACxB,OAAO,IAAIpC,QAAQ,CAACC,EAASC,KAKzB,IAAIkG,EAAgB,EACpB,MAAMC,EAAU,GAChB,SAASC,IACL,MAAMC,EAAInE,EAAOkE,OACbC,EAoBR,SAAgBA,GACZF,EAAQrH,KAAKuH,GACbH,GAAiBG,EAAE1H,OACnB,MAAM0G,EAAWtG,OAAOC,OAAOmH,EAASD,GAClCI,EAAejB,EAAS9D,QAAQ,YACtC,IAAsB,IAAlB+E,EAIA,OAFAhD,EAAM,qDACN8C,IAGJ,MAAMG,EAAclB,EACfmB,MAAM,EAAGF,GACTpH,SAAS,SACTkC,MAAM,QACLqF,EAAYF,EAAYG,QAC9B,IAAKD,EAED,OADAvE,EAAOuD,UACAzF,EAAO,IAAImB,MAAM,mDAE5B,MAAMwF,EAAiBF,EAAUrF,MAAM,KACjCmE,GAAcoB,EAAe,GAC7BC,EAAaD,EAAeH,MAAM,GAAGK,KAAK,KAC1C7C,EAAU,CAAC,EACjB,IAAK,MAAM8C,KAAUP,EAAa,CAC9B,IAAKO,EACD,SACJ,MAAMC,EAAaD,EAAOvF,QAAQ,KAClC,IAAoB,IAAhBwF,EAEA,OADA7E,EAAOuD,UACAzF,EAAO,IAAImB,MAAM,gDAAgD2F,OAE5E,MAAMf,EAAMe,EAAON,MAAM,EAAGO,GAAYC,cAClCpJ,EAAQkJ,EAAON,MAAMO,EAAa,GAAGE,YACrCC,EAAUlD,EAAQ+B,GACD,iBAAZmB,EACPlD,EAAQ+B,GAAO,CAACmB,EAAStJ,GAEpBuJ,MAAMC,QAAQF,GACnBA,EAAQpI,KAAKlB,GAGboG,EAAQ+B,GAAOnI,CAEvB,CACA0F,EAAM,mCAAoCmD,EAAWzC,GACrDqD,IACAtH,EAAQ,CACJ0C,QAAS,CACL8C,aACAqB,aACA5C,WAEJqB,YAER,CA1EQiC,CAAOjB,GAEPnE,EAAOjC,KAAK,WAAYmG,EAChC,CACA,SAASiB,IACLnF,EAAOqF,eAAe,MAAOC,GAC7BtF,EAAOqF,eAAe,QAASE,GAC/BvF,EAAOqF,eAAe,WAAYnB,EACtC,CACA,SAASoB,IACLH,IACA/D,EAAM,SACNtD,EAAO,IAAImB,MAAM,4DACrB,CACA,SAASsG,EAAQnI,GACb+H,IACA/D,EAAM,aAAchE,GACpBU,EAAOV,EACX,CAyDA4C,EAAOwF,GAAG,QAASD,GACnBvF,EAAOwF,GAAG,MAAOF,GACjBpB,KAER,C","sources":["webpack://nox-vscode/./node_modules/agent-base/dist/helpers.js","webpack://nox-vscode/./node_modules/agent-base/dist/index.js","webpack://nox-vscode/./node_modules/https-proxy-agent/dist/index.js","webpack://nox-vscode/./node_modules/https-proxy-agent/dist/parse-proxy-response.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.req = exports.json = exports.toBuffer = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nasync function toBuffer(stream) {\n    let length = 0;\n    const chunks = [];\n    for await (const chunk of stream) {\n        length += chunk.length;\n        chunks.push(chunk);\n    }\n    return Buffer.concat(chunks, length);\n}\nexports.toBuffer = toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function json(stream) {\n    const buf = await toBuffer(stream);\n    const str = buf.toString('utf8');\n    try {\n        return JSON.parse(str);\n    }\n    catch (_err) {\n        const err = _err;\n        err.message += ` (input: ${str})`;\n        throw err;\n    }\n}\nexports.json = json;\nfunction req(url, opts = {}) {\n    const href = typeof url === 'string' ? url : url.href;\n    const req = (href.startsWith('https:') ? https : http).request(url, opts);\n    const promise = new Promise((resolve, reject) => {\n        req\n            .once('response', resolve)\n            .once('error', reject)\n            .end();\n    });\n    req.then = promise.then.bind(promise);\n    return req;\n}\nexports.req = req;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Agent = void 0;\nconst net = __importStar(require(\"net\"));\nconst http = __importStar(require(\"http\"));\nconst https_1 = require(\"https\");\n__exportStar(require(\"./helpers\"), exports);\nconst INTERNAL = Symbol('AgentBaseInternalState');\nclass Agent extends http.Agent {\n    constructor(opts) {\n        super(opts);\n        this[INTERNAL] = {};\n    }\n    /**\n     * Determine whether this is an `http` or `https` request.\n     */\n    isSecureEndpoint(options) {\n        if (options) {\n            // First check the `secureEndpoint` property explicitly, since this\n            // means that a parent `Agent` is \"passing through\" to this instance.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof options.secureEndpoint === 'boolean') {\n                return options.secureEndpoint;\n            }\n            // If no explicit `secure` endpoint, check if `protocol` property is\n            // set. This will usually be the case since using a full string URL\n            // or `URL` instance should be the most common usage.\n            if (typeof options.protocol === 'string') {\n                return options.protocol === 'https:';\n            }\n        }\n        // Finally, if no `protocol` property was set, then fall back to\n        // checking the stack trace of the current call stack, and try to\n        // detect the \"https\" module.\n        const { stack } = new Error();\n        if (typeof stack !== 'string')\n            return false;\n        return stack\n            .split('\\n')\n            .some((l) => l.indexOf('(https.js:') !== -1 ||\n            l.indexOf('node:https:') !== -1);\n    }\n    // In order to support async signatures in `connect()` and Node's native\n    // connection pooling in `http.Agent`, the array of sockets for each origin\n    // has to be updated synchronously. This is so the length of the array is\n    // accurate when `addRequest()` is next called. We achieve this by creating a\n    // fake socket and adding it to `sockets[origin]` and incrementing\n    // `totalSocketCount`.\n    incrementSockets(name) {\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n        // need to create a fake socket because Node.js native connection pooling\n        // will never be invoked.\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\n            return null;\n        }\n        // All instances of `sockets` are expected TypeScript errors. The\n        // alternative is to add it as a private property of this class but that\n        // will break TypeScript subclassing.\n        if (!this.sockets[name]) {\n            // @ts-expect-error `sockets` is readonly in `@types/node`\n            this.sockets[name] = [];\n        }\n        const fakeSocket = new net.Socket({ writable: false });\n        this.sockets[name].push(fakeSocket);\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n        this.totalSocketCount++;\n        return fakeSocket;\n    }\n    decrementSockets(name, socket) {\n        if (!this.sockets[name] || socket === null) {\n            return;\n        }\n        const sockets = this.sockets[name];\n        const index = sockets.indexOf(socket);\n        if (index !== -1) {\n            sockets.splice(index, 1);\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n            this.totalSocketCount--;\n            if (sockets.length === 0) {\n                // @ts-expect-error `sockets` is readonly in `@types/node`\n                delete this.sockets[name];\n            }\n        }\n    }\n    // In order to properly update the socket pool, we need to call `getName()` on\n    // the core `https.Agent` if it is a secureEndpoint.\n    getName(options) {\n        const secureEndpoint = this.isSecureEndpoint(options);\n        if (secureEndpoint) {\n            // @ts-expect-error `getName()` isn't defined in `@types/node`\n            return https_1.Agent.prototype.getName.call(this, options);\n        }\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return super.getName(options);\n    }\n    createSocket(req, options, cb) {\n        const connectOpts = {\n            ...options,\n            secureEndpoint: this.isSecureEndpoint(options),\n        };\n        const name = this.getName(connectOpts);\n        const fakeSocket = this.incrementSockets(name);\n        Promise.resolve()\n            .then(() => this.connect(req, connectOpts))\n            .then((socket) => {\n            this.decrementSockets(name, fakeSocket);\n            if (socket instanceof http.Agent) {\n                try {\n                    // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n                    return socket.addRequest(req, connectOpts);\n                }\n                catch (err) {\n                    return cb(err);\n                }\n            }\n            this[INTERNAL].currentSocket = socket;\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n            super.createSocket(req, options, cb);\n        }, (err) => {\n            this.decrementSockets(name, fakeSocket);\n            cb(err);\n        });\n    }\n    createConnection() {\n        const socket = this[INTERNAL].currentSocket;\n        this[INTERNAL].currentSocket = undefined;\n        if (!socket) {\n            throw new Error('No socket was returned in the `connect()` function');\n        }\n        return socket;\n    }\n    get defaultPort() {\n        return (this[INTERNAL].defaultPort ??\n            (this.protocol === 'https:' ? 443 : 80));\n    }\n    set defaultPort(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].defaultPort = v;\n        }\n    }\n    get protocol() {\n        return (this[INTERNAL].protocol ??\n            (this.isSecureEndpoint() ? 'https:' : 'http:'));\n    }\n    set protocol(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].protocol = v;\n        }\n    }\n}\nexports.Agent = Agent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpsProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst url_1 = require(\"url\");\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\nconst debug = (0, debug_1.default)('https-proxy-agent');\nconst setServernameFromNonIpHost = (options) => {\n    if (options.servername === undefined &&\n        options.host &&\n        !net.isIP(options.host)) {\n        return {\n            ...options,\n            servername: options.host,\n        };\n    }\n    return options;\n};\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.options = { path: undefined };\n        this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: ['http/1.1'],\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */\n    async connect(req, opts) {\n        const { proxy } = this;\n        if (!opts.host) {\n            throw new TypeError('No \"host\" provided');\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(setServernameFromNonIpHost(this.connectOpts));\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            payload += `${name}: ${headers[name]}\\r\\n`;\n        }\n        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect, buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                return tls.connect({\n                    ...omit(setServernameFromNonIpHost(opts), 'host', 'path', 'port'),\n                    socket,\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new net.Socket({ writable: false });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s) => {\n            debug('Replaying proxy buffer for failed request');\n            (0, assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseProxyResponse = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('readable', read);\n        }\n        function onend() {\n            cleanup();\n            debug('onend');\n            reject(new Error('Proxy connection ended before receiving CONNECT response'));\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const headerParts = buffered\n                .slice(0, endOfHeaders)\n                .toString('ascii')\n                .split('\\r\\n');\n            const firstLine = headerParts.shift();\n            if (!firstLine) {\n                socket.destroy();\n                return reject(new Error('No header received from proxy CONNECT response'));\n            }\n            const firstLineParts = firstLine.split(' ');\n            const statusCode = +firstLineParts[1];\n            const statusText = firstLineParts.slice(2).join(' ');\n            const headers = {};\n            for (const header of headerParts) {\n                if (!header)\n                    continue;\n                const firstColon = header.indexOf(':');\n                if (firstColon === -1) {\n                    socket.destroy();\n                    return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n                }\n                const key = header.slice(0, firstColon).toLowerCase();\n                const value = header.slice(firstColon + 1).trimStart();\n                const current = headers[key];\n                if (typeof current === 'string') {\n                    headers[key] = [current, value];\n                }\n                else if (Array.isArray(current)) {\n                    current.push(value);\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n            debug('got proxy server response: %o %o', firstLine, headers);\n            cleanup();\n            resolve({\n                connect: {\n                    statusCode,\n                    statusText,\n                    headers,\n                },\n                buffered,\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.parseProxyResponse = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","req","json","toBuffer","http","https","async","stream","length","chunks","chunk","push","Buffer","concat","str","toString","JSON","parse","_err","err","message","url","opts","href","startsWith","request","promise","Promise","resolve","reject","once","end","then","bind","__exportStar","p","Agent","net","https_1","INTERNAL","Symbol","constructor","super","isSecureEndpoint","options","secureEndpoint","protocol","stack","Error","split","some","l","indexOf","incrementSockets","name","maxSockets","Infinity","maxTotalSockets","sockets","fakeSocket","Socket","totalSocketCount","decrementSockets","socket","index","splice","getName","createSocket","cb","connectOpts","connect","addRequest","currentSocket","createConnection","defaultPort","__importDefault","HttpsProxyAgent","tls","assert_1","debug_1","agent_base_1","url_1","parse_proxy_response_1","debug","default","setServernameFromNonIpHost","servername","host","isIP","proxy","path","URL","proxyHeaders","headers","hostname","replace","port","parseInt","ALPNProtocols","omit","TypeError","isIPv6","payload","username","password","auth","decodeURIComponent","from","Host","keepAlive","keys","proxyResponsePromise","parseProxyResponse","write","buffered","emit","statusCode","resume","destroy","readable","s","listenerCount","obj","ret","key","includes","protocols","buffersLength","buffers","read","b","endOfHeaders","headerParts","slice","firstLine","shift","firstLineParts","statusText","join","header","firstColon","toLowerCase","trimStart","current","Array","isArray","cleanup","ondata","removeListener","onend","onerror","on"],"sourceRoot":""}